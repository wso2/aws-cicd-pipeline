# Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

AWSTemplateFormatVersion: 2010-09-09
Description: >-
  WSO2 AWS PipeLine
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Cluster Configuration
        Parameters:
          - IAMRole
          - KeyPairName
          - WSO2InstanceType
      - Label:
          default: Network Configuration
        Parameters:
          - CertificateName
      - Label:
          default: Database Configuration
        Parameters:
          - DBUsername
          - DBPassword
          - DBType
      - Label:
          default: WSO2 Subscription Credentials
        Parameters:
          - WSO2Username
          - WSO2Password
      - Label:
          default: GitHub Credentials
        Parameters:
          - GitHubUsername
          - GitHubPassword
      - Label:
          default: WebHook Configuration
        Parameters:
          - RepositoryName
      - Label:
          default: Product Configuration
        Parameters:
          - PackDownloadPath
          - ProductName
          - DeploymentPattern
      - Label:
          default: Other Parameters
        Parameters:
          - ConfigurationRepoUrl
          - CloudFormationRepoUrl
          - ArtifactRepoUrl
          - JenkinsPassword
          - Email
    ParameterLabels:
      IAMRole:
        default: AWS IAMRole
      CertificateName:
        default: SSL Certificate Name
      KeyPairName:
        default: Key Pair Name
      GitHubUsername:
        default: Username
      GitHubPassword:
        default: Password
      RepositoryName:
        default: Github Webhook Repository Name
      WSO2Username:
        default: Username
      WSO2Password:
        default: Password
      WSO2InstanceType:
        default: Instance Type
      DBUsername:
        default: Username
      DBPassword:
        default: Password
      DBType:
        default: Database Type
      ArtifactRepoUrl:
        default: Artifacts Repository (git)
      CloudFormationRepoUrl:
        default: CloudFormation Scripts (git)
      ConfigurationRepoUrl:
        default: Configuration Repository (git)
      ProductName:
        default: Product Name
      DeploymentPattern:
        default: Product Deployment Pattern
      JenkinsPassword:
        default: Jenkins console login Password
      Email:
        default: Email
      PackDownloadPath:
        default: Pack Download Path
Parameters:
  IAMRole:
    Type: String
    ConstraintDescription: Mandatory field
  KeyPairName:
    Description: The private key used to log in to instances through SSH
    Type: 'AWS::EC2::KeyPair::KeyName'
    AllowedPattern: '.+'
    ConstraintDescription: Mandatory field
  CertificateName:
    Description: A valid SSL certificate used for HTTPS
    Type: String
    AllowedPattern: '.+'
    ConstraintDescription: Mandatory field
  WSO2InstanceType:
    Type: String
    Default: t2.medium
    AllowedValues:
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
    ConstraintDescription: Must be a valid EC2 instance type
  ProductName:
    Type: String
    AllowedPattern: '.+'
    AllowedValues:
      - wso2ei
      - wso2is
      - wso2am
    ConstraintDescription: Mandatory field
  DeploymentPattern:
    Type: String
    AllowedPattern: '.+'
    AllowedValues:
      - ei_integrator
      - is
      - apim
    ConstraintDescription: Mandatory field
  GitHubUsername:
    Type: String
    Default: ""
  GitHubPassword:
    Type: String
    NoEcho: true
  RepositoryName:
    Type: String
    Description: Github repository to configure webhook. eg:cicd-test-artifacts (optional)
  WSO2Username:
    Type: String
    Default: ""
    Description: A valid WSO2 subscription to receive updates (optional)
  WSO2Password:
    Type: String
    NoEcho: true
  DBUsername:
    Type: String
    AllowedPattern: '.+'
    ConstraintDescription: Mandatory field
  DBPassword:
    Type: String
    NoEcho: true
    Description: Minimum 8 characters
    AllowedPattern: '.+'
    ConstraintDescription: Mandatory field
  DBType:
    Type: String
    Default: MySQL
    AllowedPattern: '.+'
    ConstraintDescription: Mandatory field
  ArtifactRepoUrl:
    Type: String
    AllowedPattern: '.+'
    ConstraintDescription: Mandatory field
  CloudFormationRepoUrl:
    Type: String
    AllowedPattern: '.+'
    ConstraintDescription: Mandatory field
  ConfigurationRepoUrl:
    Type: String
    AllowedPattern: '.+'
    ConstraintDescription: Mandatory field
  JenkinsPassword:
    Type: String
    NoEcho: true
    AllowedPattern: '.+'
    ConstraintDescription: Mandatory field
  Email:
    Type: String
    Description: A valid email address to receive notifications on pipeline (optional)
Resources:
  # networking configurations
  WSO2JENKINSVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
  WSO2JenkinsSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref WSO2JENKINSVPC
      CidrBlock: 10.0.254.0/24
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
  WSO2JenkinsPublicInternetGateway:
    Type: 'AWS::EC2::InternetGateway'
  WSO2JenkinsPublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref WSO2JENKINSVPC

  WSO2JenkinsPublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref WSO2JenkinsPublicRouteTable
      SubnetId: !Ref WSO2JenkinsSubnet1
  WSO2JenkinsPublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref WSO2JenkinsPublicRouteTable
      GatewayId: !Ref WSO2JenkinsPublicInternetGateway
      DestinationCidrBlock: 0.0.0.0/0
    DependsOn: WSO2JenkinsVPCInternetGatewayAttachment
  WSO2JenkinsVPCInternetGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId: !Ref WSO2JenkinsPublicInternetGateway
      VpcId: !Ref WSO2JENKINSVPC
  WSO2TransitGateway:
    Type: "AWS::EC2::TransitGateway"
    Properties:
      AutoAcceptSharedAttachments: enable
      DefaultRouteTableAssociation: enable
      DefaultRouteTablePropagation: enable
      Description: WSO2 Transit Gateway
      DnsSupport: disable
      VpnEcmpSupport: enable
      Tags:
        - Key: Name
          Value: WSO2 Transit Gateway
  WSO2JenkinsTransitGatewayAttachment:
    Type: "AWS::EC2::TransitGatewayAttachment"
    Properties:
      SubnetIds:
        - !Ref WSO2JenkinsSubnet1
      Tags:
        - Key: Name
          Value: WSO2 Transit Gateway
      TransitGatewayId: !Ref WSO2TransitGateway
      VpcId: !Ref WSO2JENKINSVPC
    DependsOn: WSO2JenkinsInstance
  WSO2TransitGatewayRoute:
     Type: 'AWS::EC2::Route'
     Properties:
       RouteTableId: !Ref WSO2JenkinsPublicRouteTable
       TransitGatewayId: !Ref WSO2TransitGateway
       DestinationCidrBlock: 10.1.0.0/16
     DependsOn: WSO2JenkinsTransitGatewayAttachment
  WSO2JenkinsSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref WSO2JENKINSVPC
      GroupDescription: WSO2 Jenkins node Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
  WSO2JenkinsInstance:
    Type: 'AWS::EC2::Instance'
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT20M
    Properties:
      DisableApiTermination: 'false'
      InstanceInitiatedShutdownBehavior: stop
      ImageId: !FindInMap
        - WSO2UbuntuAMIRegionMap
        - !Ref 'AWS::Region'
        - !Ref ProductName
      InstanceType: t2.medium
      KeyName: !Ref KeyPairName
      IamInstanceProfile: !Ref IAMRole
      Monitoring: 'false'
      Tags:
        - Key: Name
          Value: WSO2JenkinsInstance
      NetworkInterfaces:
        - DeleteOnTermination: 'true'
          AssociatePublicIpAddress : 'true'
          Description: Primary network interface
          DeviceIndex: 0
          SubnetId: !Ref WSO2JenkinsSubnet1
          GroupSet:
            - !Ref WSO2JenkinsSecurityGroup
      UserData: !Base64
        'Fn::Sub': |
          Content-Type: multipart/mixed; boundary="//"
          MIME-Version: 1.0

          --//
          Content-Type: text/cloud-config; charset="us-ascii"
          MIME-Version: 1.0
          Content-Transfer-Encoding: 7bit
          Content-Disposition: attachment; filename="cloud-config.txt"

          #cloud-config
          cloud_final_modules:
          - [scripts-user, always]

          --//
          Content-Type: text/x-shellscript; charset="us-ascii"
          MIME-Version: 1.0
          Content-Transfer-Encoding: 7bit
          Content-Disposition: attachment; filename="userdata.txt"

          #!/bin/bash
          exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
          export PATH=~/.local/bin:$PATH
          sed -i "s|.*GIT_REPO_ARTIFACTS.*|env.GIT_REPO_ARTIFACTS=\'${ArtifactRepoUrl}\'|g" /home/jenkins/jenkins_env
          sed -i "s|.*GIT_REPO_CF.*|env.GIT_REPO_CF=\'${CloudFormationRepoUrl}\'|g" /home/jenkins/jenkins_env
          sed -i "s|.*GIT_REPO_PUPPET.*|env.GIT_REPO_PUPPET=\'${ConfigurationRepoUrl}\'|g" /home/jenkins/jenkins_env
          sed -i "s/.*KeyPairName.*/env.KeyPairName=\'${KeyPairName}\'/g" /home/jenkins/jenkins_env
          sed -i "s/.*WSO2InstanceType.*/env.WSO2InstanceType=\'${WSO2InstanceType}\'/g" /home/jenkins/jenkins_env
          sed -i "s/.*CertificateName.*/env.CertificateName=\'${CertificateName}\'/g" /home/jenkins/jenkins_env
          sed -i "s/.*DBType.*/env.DBType=\'${DBType}\'/g" /home/jenkins/jenkins_env
          sed -i "s/.*ProductName.*/env.ProductName=\'${ProductName}\'/g" /home/jenkins/jenkins_env
          sed -i "s/.*DeploymentPattern.*/env.DeploymentPattern=\'${DeploymentPattern}\'/g" /home/jenkins/jenkins_env
          sed -i "s/.*Email.*/env.Email=\'${Email}\'/g" /home/jenkins/jenkins_env
          sed -i "s/.*IAMRole.*/env.IAMRole=\'${IAMRole}\'/g" /home/jenkins/jenkins_env
          sed -i "s/.*TransitGatewayId.*/env.TransitGatewayId=\'${WSO2TransitGateway}\'/g" /home/jenkins/jenkins_env
          sed -i "s/.*PackDownloadPath.*/env.PackDownloadPath=\'${PackDownloadPath}\'/g" /home/jenkins/jenkins_env

          export publichostname=$(ec2metadata --public-hostname)
          sed -i "s/<jenkinsUrl>.*:8080/<\/jenkinsUrl>/<jenkinsUrl>$publichostname:8080<\/jenkinsUrl>/g" /var/lib/jenkins/jenkins.model.JenkinsLocationConfiguration.xml
          service jenkins start

          export jenkinshookurl=http://admin:${JenkinsPassword}@$publichostname:8080/generic-webhook-trigger/invoke
          export githubhookurl=https://api.github.com/repos/${GitHubUsername}/${RepositoryName}/hooks
          sleep 120
          export JENKINS_CRUMB=$(curl -s 'http://admin:admin@localhost:8080/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,":",//crumb)')
          curl -s -X POST -H $JENKINS_CRUMB 'http://admin:admin@localhost:8080/credentials/store/system/domain/_/createCredentials' --data-urlencode 'json={"": "0","credentials":{"scope":"GLOBAL","id":"wum_creds","username":"${WSO2Username}","password": "${WSO2Password}","description": "WSO2 Credentials","$class": "com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl"}}' -v
          curl -s -X POST -H $JENKINS_CRUMB 'http://admin:admin@localhost:8080/credentials/store/system/domain/_/createCredentials' --data-urlencode 'json={"": "0","credentials":{"scope":"GLOBAL","id":"github_creds","username":"${GitHubUsername}","password": "${GitHubPassword}","description": "Github Credentials","$class": "com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl"}}' -v
          curl -s -X POST -H $JENKINS_CRUMB 'http://admin:admin@localhost:8080/credentials/store/system/domain/_/createCredentials' --data-urlencode 'json={"": "0","credentials":{"scope":"GLOBAL","id":"db_creds","username":"${DBUsername}","password": "${DBPassword}","description": "Databse Credentials","$class": "com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl"}}' -v
          echo $JENKINS_CRUMB >> /home/jenkins/log.txt
          bash /home/jenkins/webhook/create_webhook.sh ${GitHubUsername} ${GitHubPassword} $githubhookurl $jenkinshookurl
          sleep 120
          bash /var/lib/jenkins/update_password.sh ${JenkinsPassword}
          service jenkins restart
          /usr/local/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WSO2JenkinsInstance --region ${AWS::Region}
    DependsOn:
      - WSO2TransitGateway
Outputs:
  JenkinsConsoleURL:
    Value: !Sub 'http://${WSO2JenkinsInstance.PublicDnsName}:8080/blue/pipelines'
    Description: Jenkins Console URL
Mappings:
  WSO2UbuntuAMIRegionMap:
    us-east-1:
      wso2ei: ami-04d27706b25b47e3d
      wso2is: ami-0bf95d5de5c854738
      wso2am: ami-0fafd9245f636aa3c
    us-east-2:
      wso2ei: ami-0d5e71a25e8d6f93d
      wso2is: ami-0eb3428fe7a595443
      wso2am: ami-02274b57181300fe0
    us-west-1:
      wso2ei: ami-011dd26e9315d470e
      wso2is: ami-0acef5f11d6ca987e
      wso2am: ami-0f910f7b2b47f66bf
    us-west-2:
      wso2ei: ami-0528996aa0cd1feca
      wso2is: ami-07ea470d4c2069685
      wso2am: ami-09151a32a7ce7f298
    ap-southeast-2:
      wso2ei: ami-0c38de9c55e19b865
      wso2is: ami-01cb78fd11b81b16e
      wso2am: ami-0ea08bf488eaf9b84
    eu-west-1:
      wso2ei: ami-02b140850902d5328
      wso2is: ami-06405834a1c13ce97
      wso2am: ami-058dba9473972cc61
